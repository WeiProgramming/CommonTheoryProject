<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OurMenuTitl" xml:space="preserve">
    <value>OUR MENU</value>
  </data>
  <data name="DuckDuckFryTitl" xml:space="preserve">
    <value>DUCK DUCK FRY</value>
  </data>
  <data name="DuckFatFriesTitl" xml:space="preserve">
    <value>DUCK FAT FRIES</value>
  </data>
  <data name="DuckFatFriesDesc" xml:space="preserve">
    <value>Shoestring fries / shredded duck confit / scallions (gluten free option available on request)</value>
  </data>
  <data name="DoubleDuckFriesTitl" xml:space="preserve">
    <value>DOUBLE DUCK FRIES</value>
  </data>
  <data name="DoubleDuckFriesDesc" xml:space="preserve">
    <value>Shoestring fries / shredded duck confit / crispy duck skin / scallions / (gluten free option available on request)</value>
  </data>
  <data name="FlockOfDuckFriesTitl" xml:space="preserve">
    <value>FLOCK OF DUCK FRIES</value>
  </data>
  <data name="FlockOfFuckFriesDesc" xml:space="preserve">
    <value>Shoestring fries / shredded duck confit / crispy duck skin / gravy / fried duck egg / scallions</value>
  </data>
  <data name="StartersTitl" xml:space="preserve">
    <value>STARTERS</value>
  </data>
  <data name="BeetAndWatermelonPokeTitl" xml:space="preserve">
    <value>BEET AND WATERMELON POKE </value>
  </data>
  <data name="BeetAndWatermelonPokeDesc" xml:space="preserve">
    <value>Salted roasted beets / roasted watermelon / flax seed oil / sea beans / onion / cucumber / nori / sesame oil / taro chips / (Vegan option available)</value>
  </data>
  <data name="BuffaloCauliflowerTitl" xml:space="preserve">
    <value>BUFFALO CAULIFLOWER</value>
  </data>
  <data name="BuffaloCauliflowerDesc" xml:space="preserve">
    <value>Roasted cauliflower / rice flour / buffalo sauce / house ranch (1 pepper-medium)</value>
  </data>
  <data name="CapreseTitl" xml:space="preserve">
    <value>CAPRESE</value>
  </data>
  <data name="CapreseDesc" xml:space="preserve">
    <value>Vine-ripe tomato / fresh mozzarella / almond basilpesto / honey balsamic reduction / garlic oil (vegetarian option available)</value>
  </data>
  <data name="CrispyChickenWingsTitl" xml:space="preserve">
    <value>CRISPY CHICKEN WINGS</value>
  </data>
  <data name="CrispyChickenWingsDesc" xml:space="preserve">
    <value>Jumbo chicken wings / sea salt / cracked pepper / red chili flakes. Choose: salt &amp; pepper, sweet &amp; spicy, or hell fire, 2 peppers-spicy</value>
  </data>
  <data name="OGFriedBrusselsTitl" xml:space="preserve">
    <value>OG FRIED BRUSSELS</value>
  </data>
  <data name="OGFriedBrusselsDesc" xml:space="preserve">
    <value>Balsamic reduction / parmesan cheese / bacan (Gluten free option available upon request)</value>
  </data>
  <data name="BaconAndBlueBrusselsTitl" xml:space="preserve">
    <value>BACON AND BLUE BRUSSELS</value>
  </data>
  <data name="BaconAndBlueBrusselsDesc" xml:space="preserve">
    <value>Fried brussel sprouts / chopped bacon / granny smith apple / thyme / lemon / blue cheese</value>
  </data>
  <data name="SweetAndSpicyPorkBellyTitl" xml:space="preserve">
    <value>SWEET AND SPICY PORK BELLY</value>
  </data>
  <data name="SweetAndSpicyPorkBellyDesc" xml:space="preserve">
    <value>Roasted pork belly / kimchi / sweet &amp; spicy sauce / scallions (1 pepper-medium, Gluten free option available upon request)</value>
  </data>
  <data name="SaltAndPepperCrispyCalamariTitl" xml:space="preserve">
    <value>SALT AND PEPPER CRISPY CALAMARI</value>
  </data>
  <data name="SaltAndPepperCrispyCalamariDesc" xml:space="preserve">
    <value>Sea salt / cracked pepper / red chili flakes / scallions (1 pepper-medium)</value>
  </data>
  <data name="BlueCrabAndCheddarPretzelsTitl" xml:space="preserve">
    <value>BLUE CRAB AND CHEDDAR PRETZELS</value>
  </data>
  <data name="BlueCrabAndCheddarPretzelsDesc" xml:space="preserve">
    <value>Soft pretzel / blue crab spread / cheddar jack cheese / old bay seasoning / fresh parsley</value>
  </data>
  <data name="CheeseBallsTitl" xml:space="preserve">
    <value>CHEESE BALLS</value>
  </data>
  <data name="CheeseBallsDesc" xml:space="preserve">
    <value>Parmesan / cream / mozzarella / arrabiata dip (vegetarian option available)</value>
  </data>
  <data name="PretzelBallsTitl" xml:space="preserve">
    <value>PRETZEL BALLS</value>
  </data>
  <data name="PretzelBallsDesc" xml:space="preserve">
    <value>Beer mustard / beer cheese (vegetarian option available)</value>
  </data>
  <data name="FlatbreadsTitl" xml:space="preserve">
    <value>FLATBREADS</value>
  </data>
  <data name="EasternShoreTitl" xml:space="preserve">
    <value>EASTERN SHORE</value>
  </data>
  <data name="EasternShoreDesc" xml:space="preserve">
    <value>Blue crab / seasoned potatoes / sweet corn / crab spread / roasted red pepper / crispy chicken skin / old bay seasoning</value>
  </data>
  <data name="SausageAndPeppersTitl" xml:space="preserve">
    <value>SAUSAGE AND PEPPERS</value>
  </data>
  <data name="SausageAndPeppersDesc" xml:space="preserve">
    <value>Sausage / roasted red peppers / mozzarella / arrabiatta sauce</value>
  </data>
  <data name="GardenTitl" xml:space="preserve">
    <value>GARDEN </value>
  </data>
  <data name="GardenDesc" xml:space="preserve">
    <value>Charred sweet corn / sriracha honey vinaigrette buffalo cauliflower / fresh tomato / lemon / arugula (vegetarian option available)</value>
  </data>
  <data name="HellFireTitl" xml:space="preserve">
    <value>HELL FIRE</value>
  </data>
  <data name="HellFireDesc" xml:space="preserve">
    <value>Grilled chicken / hell fire arrabiata sauce / sliced jalapeno / red onion / cilantro / cheddar (2 peppers-spicy)</value>
  </data>
  <data name="TomatoAndPestoTitl" xml:space="preserve">
    <value>TOMATO AND PESTO</value>
  </data>
  <data name="TomatoAndPestoDesc" xml:space="preserve">
    <value>Almond basil pesto / tomato / mozzarella / $2 add bacon bits or sausage (vegetarian option available)</value>
  </data>
  <data name="SeasonalSweetsTitl" xml:space="preserve">
    <value>SEASONAL SWEETS</value>
  </data>
  <data name="SeasonalSweetsDesc" xml:space="preserve">
    <value>Our desserts rotate seasonally, please ask our staff what is available!!!</value>
  </data>
  <data name="ChocolatelyGoodnessTitl" xml:space="preserve">
    <value>CHOCOLATELY GOODNESS</value>
  </data>
  <data name="FruityAndSweetTitl" xml:space="preserve">
    <value>FRUITY AND SWEET</value>
  </data>
  <data name="FeelingExtraSweetTitl" xml:space="preserve">
    <value>FELLING EXTRA SWEET?</value>
  </data>
  <data name="FeelingExtraSweetDesc" xml:space="preserve">
    <value>Send a "beer" to the kitchen staff (we use this kind of gesture of yours to treat our kitchen staff to do soemthing fun!!!)</value>
  </data>
  <data name="GreensTitl" xml:space="preserve">
    <value>GREENS</value>
  </data>
  <data name="GreensDesc" xml:space="preserve">
    <value>Add Protein (extra cost): grilled chicken $4 | shrimp $6 | salmon $7 </value>
  </data>
  <data name="SweetCornAndShrimpTitl" xml:space="preserve">
    <value>SWEET CORN AND SHRIMP</value>
  </data>
  <data name="SweetCornAndShrimpDesc" xml:space="preserve">
    <value>Charred corn / bacon / pickled onion / apple / romaine / sauteed shrimp / sriracha honey vinaigrette</value>
  </data>
  <data name="ClassicCaesarTitl" xml:space="preserve">
    <value>CLASSIC CAESAR </value>
  </data>
  <data name="ClassicCaesarDesc" xml:space="preserve">
    <value>Romaine hearts / shaved parmesan / lemon / garlic croutons / house dressing (vegetarian option available)</value>
  </data>
  <data name="RoastedBeetTitl" xml:space="preserve">
    <value>ROASTED BEET</value>
  </data>
  <data name="RoastedBeetDesc" xml:space="preserve">
    <value>Mixed salad and beet greens / salt roasted beets / balsamic vinaigrette / blue cheese / fresh dill (vegetarian option available)</value>
  </data>
  <data name="MixedBerryAndAlmondTitl" xml:space="preserve">
    <value>MIXED BERRY AND ALMOND</value>
  </data>
  <data name="MixedBerryAndAlmondDesc" xml:space="preserve">
    <value>Mixed greens / seasonal berries / vanilla vinaigrette / spiced almond / blue cheese</value>
  </data>
  <data name="ShareableSidesTitl" xml:space="preserve">
    <value>SHAREABLE SIDES</value>
  </data>
  <data name="ShareableSidesDesc" xml:space="preserve">
    <value>All sides are gluten free</value>
  </data>
  <data name="CharredCornSuccotashTitl" xml:space="preserve">
    <value>CHARRED CORN SUCCOTASH</value>
  </data>
  <data name="CharredCornSuccotashDesc" xml:space="preserve">
    <value>Red pepper / old bay seasoning / onion / garlic / parsley (vegan option available, gluten free option available upon request)</value>
  </data>
  <data name="TabascoSlawTitl" xml:space="preserve">
    <value>TABASCO SLAW </value>
  </data>
  <data name="TabascoSlawDesc" xml:space="preserve">
    <value>Lime / garlic aioli / house dill pickle / tabasco (vegetarian option available, gluten free option available upon request)</value>
  </data>
  <data name="BucketofFriesTitl" xml:space="preserve">
    <value>BUCKET OF FRIES</value>
  </data>
  <data name="BurgersAndSandwichesTitl" xml:space="preserve">
    <value>BURGERS AND SANDWICHES</value>
  </data>
  <data name="BurgersAndSandwichesDesc" xml:space="preserve">
    <value>Extra Cost: Add bacon strips $2 | fried egg $1.5 with fries or kimchi slaw</value>
  </data>
  <data name="CTBurgerTitl" xml:space="preserve">
    <value>CT BURGER</value>
  </data>
  <data name="CTBurgerDesc" xml:space="preserve">
    <value>Ground chuck / arugula / caramelized onions / fresh tomatoes / sharp cheddar brioche</value>
  </data>
  <data name="BaconAndBlueTitl" xml:space="preserve">
    <value>BACON AND BLUE</value>
  </data>
  <data name="BaconAndBlueDesc" xml:space="preserve">
    <value>Ground chuck / blue cheese / sliced apple / bacon / garlic aioli / brioche</value>
  </data>
  <data name="SpicyGrilledChickenTitl" xml:space="preserve">
    <value>SPICY GRILLED CHICKEN</value>
  </data>
  <data name="SpicyGrilledChickenDesc" xml:space="preserve">
    <value>Sharp cheddar / sriracha aioli / tabasco slaw / brioche (1 pepper-medium)</value>
  </data>
  <data name="SteakSandwichTitl" xml:space="preserve">
    <value>STEAK SANDWICH</value>
  </data>
  <data name="SteakSandwichDesc" xml:space="preserve">
    <value>Basil aioli / fresh mozzarella / oven-cured tomatoes / Italian sandwich roll</value>
  </data>
  <data name="BlackBeanAndTomatoTitl" xml:space="preserve">
    <value>BLACK BEAN AND TOMATO</value>
  </data>
  <data name="BlackBeanAndTomatoDesc" xml:space="preserve">
    <value>Black bean patty / tomato confit / arugula / roasted peppers/ beet puree / pickled onion / pretzel bun (vegetarian option available)</value>
  </data>
  <data name="DuckBLTTitl" xml:space="preserve">
    <value>DUCK BLT</value>
  </data>
  <data name="DuckBLTDesc" xml:space="preserve">
    <value>Shredded duck confit / bacon / tomato / spring mix / garlic aioli / brioche</value>
  </data>
  <data name="ConvoyBurgerTitl" xml:space="preserve">
    <value>CONVOY BURGER</value>
  </data>
  <data name="ConvoyBurgerDesc" xml:space="preserve">
    <value>Ground chuck / scallion cream cheese / kimchi / fried egg / pork belly / gravy / ramen noodle bun</value>
  </data>
  <data name="MainCourseTitl" xml:space="preserve">
    <value>MAIN COURSE</value>
  </data>
  <data name="MarketSteakFritesTitl" xml:space="preserve">
    <value>MARKET STEAK FRITES</value>
  </data>
  <data name="MarketSteakFritesDesc" xml:space="preserve">
    <value>House cut market steak / shoestring fries / compound butter (glutten free option) MKT PRICE</value>
  </data>
  <data name="WhiteWineMusselsTitl" xml:space="preserve">
    <value>WHITE WINE MUSSELS</value>
  </data>
  <data name="WhiteWineMusselsDesc" xml:space="preserve">
    <value>Pei fresh mussels / garlic / shallot / white wine / parsley / lemon / with baguette or shoestring fries / (gluten free option) / add hell fire sauce, or bacon</value>
  </data>
  <data name="BeerBatteredFishAndChipsTitl" xml:space="preserve">
    <value>BEER BATTERED FISH AND CHIPS</value>
  </data>
  <data name="BeerBatteredFishAndChipsDesc" xml:space="preserve">
    <value>Cod / shoestring fries / house tartar</value>
  </data>
  <data name="CrabCakeAndFriedChickenTitl" xml:space="preserve">
    <value>CRAB CAKE AND FRIED CHICKEN</value>
  </data>
  <data name="CrabCakeAndFriedChickenDesc" xml:space="preserve">
    <value>Crab cake / fried chicken thigh / roasted corn succotash / fingerling potatoes / warmed spiced honey</value>
  </data>
  <data name="PorkDuckAndPolentaTitl" xml:space="preserve">
    <value>PORK, DUCK &amp; POLENTA</value>
  </data>
  <data name="PorkDuckAndPolentaDesc" xml:space="preserve">
    <value>Crispy pork belly / shredded duck confit / creamy polenta / gravy / shaved brussels / fried egg</value>
  </data>
  <data name="SearedSalmonTitl" xml:space="preserve">
    <value>SEARED SALMON</value>
  </data>
  <data name="SearedSalmonDesc" xml:space="preserve">
    <value>Blackened spice / sage rice / beurre blanc / charred green onions</value>
  </data>
</root>